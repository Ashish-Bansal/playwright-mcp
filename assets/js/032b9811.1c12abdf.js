"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[361],{6158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorials/claude-desktop-tutorial","title":"How to Use playwright-mcp on Claude Desktop - The Ultimate Guide","description":"So, you\'ve got Claude Desktop and Playwright MCP set up. Now it\'s time to make them work together like a dream. In this guide, we\'ll take you step by step through writing an end-to-end Playwright test for MakeMyTrip\u2014without the guesswork.","source":"@site/docs/tutorials/claude-tutorial.mdx","sourceDirName":"tutorials","slug":"/tutorials/claude-desktop-tutorial","permalink":"/playwright-mcp/tutorials/claude-desktop-tutorial","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"claude-desktop-tutorial","sidebar_label":"Claude Desktop","title":"How to Use playwright-mcp on Claude Desktop - The Ultimate Guide","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Tutorials","permalink":"/playwright-mcp/category/tutorials"},"next":{"title":"Cursor","permalink":"/playwright-mcp/tutorials/cursor-tutorial"}}');var i=n(4848),r=n(8453);const l={id:"claude-desktop-tutorial",sidebar_label:"Claude Desktop",title:"How to Use playwright-mcp on Claude Desktop - The Ultimate Guide",sidebar_position:1},o=void 0,a={},d=[{value:"<strong>Before you begin: Check If Playwright MCP is Installed</strong>",id:"before-you-begin-check-if-playwright-mcp-is-installed",level:2},{value:"<strong>Let&#39;s start Writing an End-to-End Playwright Test</strong>",id:"lets-start-writing-an-end-to-end-playwright-test",level:2},{value:"<strong>Step 1: Open a Playwright-Controlled Browser</strong>",id:"step-1-open-a-playwright-controlled-browser",level:3},{value:"<strong>Step 2: Record Your Interactions</strong>",id:"step-2-record-your-interactions",level:3},{value:"<strong>Step 3: Add Extra Context (The Secret Sauce for Better Tests)</strong>",id:"step-3-add-extra-context-the-secret-sauce-for-better-tests",level:3},{value:"Step 4: Extract Context and Generate the Final Test Case",id:"step-4-extract-context-and-generate-the-final-test-case",level:3},{value:"Step 5: Ask Claude to Write the Playwright Test Case",id:"step-5-ask-claude-to-write-the-playwright-test-case",level:3},{value:"Bonus:",id:"bonus",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"So, you've got Claude Desktop and Playwright MCP set up. Now it's time to make them work together like a dream. In this guide, we'll take you step by step through writing an end-to-end Playwright test for MakeMyTrip\u2014without the guesswork."}),"\n",(0,i.jsx)(t.p,{children:"By the end of this, you'll know how to:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Open a browser inside Claude"}),"\n",(0,i.jsx)(t.li,{children:"Interact with a website and capture test steps"}),"\n",(0,i.jsx)(t.li,{children:"Add extra context to make the test smarter"}),"\n",(0,i.jsx)(t.li,{children:"Extract the right DOM elements"}),"\n",(0,i.jsx)(t.li,{children:"Generate a complete, AI-assisted Playwright test case"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"If you're ready to stop struggling with test automation and let your AI assistant do the heavy lifting, let's dive in."}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"before-you-begin-check-if-playwright-mcp-is-installed",children:(0,i.jsx)(t.strong,{children:"Before you begin: Check If Playwright MCP is Installed"})}),"\n",(0,i.jsxs)(t.p,{children:["Before anything else, make sure ",(0,i.jsx)(t.strong,{children:"Playwright MCP is installed on your Claude Desktop app"}),"."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Once installed, you'll see a ",(0,i.jsx)(t.strong,{children:"tool icon"})," in Claude Desktop. Click it."]}),"\n",(0,i.jsxs)(t.li,{children:["This will bring up a list of ",(0,i.jsx)(t.strong,{children:"available Playwright MCP tools"}),". If you're wondering what each tool does, take a quick look at the screenshot provided in the reference."]}),"\n",(0,i.jsx)(t.li,{children:"These tools are what make Playwright MCP so powerful, and we'll be using them in the next steps."}),"\n",(0,i.jsx)(t.li,{children:"If it's already installed, great\u2014you're good to go."}),"\n",(0,i.jsxs)(t.li,{children:["If not, head over to the ",(0,i.jsx)(t.a,{href:"/#installation-get-up-and-running-in-no-time",children:"installation guide"})," and set it up first."]}),"\n"]}),"\n",(0,i.jsx)("img",{src:"img/claude-add-mcp.png",alt:"Claude Desktop MCP Tools",className:"img-large"}),"\n",(0,i.jsx)(t.h2,{id:"lets-start-writing-an-end-to-end-playwright-test",children:(0,i.jsx)(t.strong,{children:"Let's start Writing an End-to-End Playwright Test"})}),"\n",(0,i.jsxs)(t.p,{children:["We're going to write a ",(0,i.jsx)(t.strong,{children:"full Playwright test for MakeMyTrip Search"}),". Instead of manually writing selectors and hoping they work, we'll let Claude ",(0,i.jsx)(t.strong,{children:"watch our interactions, record them, and generate the test for us"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"step-1-open-a-playwright-controlled-browser",children:(0,i.jsx)(t.strong,{children:"Step 1: Open a Playwright-Controlled Browser"})}),"\n",(0,i.jsx)("img",{src:"img/claude-browser-init.png",alt:"Initialize Browser in Claude",className:"img-responsive"}),"\n",(0,i.jsxs)(t.p,{children:["To begin, we need a browser window that ",(0,i.jsx)(t.strong,{children:"Claude can see and interact with"}),"."]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Open Claude and type:","\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Browser init"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.li,{children:"Since this tool needs a URL, Claude will ask you to enter one."}),"\n",(0,i.jsxs)(t.li,{children:["Enter the ",(0,i.jsx)(t.strong,{children:"MakeMyTrip"})," website:","\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"makemytrip.com"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["Claude will ask for permission to run the tool. ",(0,i.jsx)(t.strong,{children:"Allow it."})]}),"\n",(0,i.jsx)(t.li,{children:"Once approved, a browser window will open."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["At this point, you can start ",(0,i.jsx)(t.strong,{children:"interacting with the MakeMyTrip website"})," just like you would manually."]}),"\n",(0,i.jsx)(t.h3,{id:"step-2-record-your-interactions",children:(0,i.jsx)(t.strong,{children:"Step 2: Record Your Interactions"})}),"\n",(0,i.jsxs)(t.p,{children:["Here's where the magic happens. As you start using the website\u2014clicking, searching, filling out forms\u2014",(0,i.jsx)(t.strong,{children:"Claude will record every action."})]}),"\n",(0,i.jsxs)(t.p,{children:["Look at the ",(0,i.jsx)(t.strong,{children:"right-hand side of Claude's interface"}),". You'll see every step you take being logged in real-time."]}),"\n",(0,i.jsx)(t.p,{children:"This means no more:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Manually writing test steps"}),"\n",(0,i.jsx)(t.li,{children:"Guessing which selectors to use"}),"\n",(0,i.jsx)(t.li,{children:"Debugging flaky AI-generated test cases"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Everything you do is ",(0,i.jsx)(t.strong,{children:"automatically turned into Playwright test steps"}),"."]}),"\n",(0,i.jsx)("img",{src:"img/browser-recording.png",alt:"Recording Browser Actions",className:"img-responsive"}),"\n",(0,i.jsx)(t.h3,{id:"step-3-add-extra-context-the-secret-sauce-for-better-tests",children:(0,i.jsx)(t.strong,{children:"Step 3: Add Extra Context (The Secret Sauce for Better Tests)"})}),"\n",(0,i.jsx)("img",{src:"img/browser-get-dom.png",alt:"Getting DOM Context",className:"img-responsive"}),"\n",(0,i.jsxs)(t.p,{children:["Here's where most test recording tools fall short: They capture actions, but they don't ",(0,i.jsx)(t.strong,{children:"understand"})," what's happening on the page."]}),"\n",(0,i.jsxs)(t.p,{children:["Claude, however, ",(0,i.jsx)(t.strong,{children:"can do a much better job"})," if we provide extra context."]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["At the ",(0,i.jsx)(t.strong,{children:"bottom-right corner"}),", you'll see a ",(0,i.jsx)(t.strong,{children:"plus (+) icon"}),". Click it."]}),"\n",(0,i.jsxs)(t.li,{children:["Select ",(0,i.jsx)(t.strong,{children:"DOM"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Now, ",(0,i.jsx)(t.strong,{children:"choose a specific part of the page"})," that's important for the test. (See the green part in the screenshot)"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"This tells Claude:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Which elements actually matter in your test"}),"\n",(0,i.jsx)(t.li,{children:"Which selectors to focus on"}),"\n",(0,i.jsx)(t.li,{children:"How to make your Playwright test more reliable"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["After selecting a DOM section, you'll see ",(0,i.jsx)(t.strong,{children:"the extracted HTML appear below your recorded steps"}),". This is your test's foundation\u2014it ensures that ",(0,i.jsx)(t.strong,{children:"Claude picks the best possible selectors instead of guessing"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"step-4-extract-context-and-generate-the-final-test-case",children:"Step 4: Extract Context and Generate the Final Test Case"}),"\n",(0,i.jsxs)(t.p,{children:["Now that recording is complete, it's time to give Claude ",(0,i.jsx)(t.strong,{children:"all the information it needs"})," to write the best possible test case."]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Go to Claude and ask it to write the test case."})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Instead of jumping straight into writing, Claude will need ",(0,i.jsx)(t.strong,{children:"more context from your recorded interactions"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Ask Claude to ",(0,i.jsx)(t.strong,{children:"call another tool"}),", either:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"get context\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["This tool will ",(0,i.jsx)(t.strong,{children:"retrieve all interactions"})," recorded in the browser session ",(0,i.jsx)(t.strong,{children:"along with the exact HTML component that you selected earlier"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["At this point, Claude will ",(0,i.jsx)(t.strong,{children:"describe all interactions it captured"}),"."]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"It will list the actions you performed."}),"\n",(0,i.jsxs)(t.li,{children:["It will show ",(0,i.jsx)(t.strong,{children:"the selected elements with their context"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Now, Claude has ",(0,i.jsx)(t.strong,{children:"everything it needs to generate a rock-solid Playwright test case"}),"."]}),"\n",(0,i.jsx)("img",{src:"img/claude-get-context.png",alt:"Getting Test Context in Claude",className:"img-large"}),"\n",(0,i.jsx)(t.h3,{id:"step-5-ask-claude-to-write-the-playwright-test-case",children:"Step 5: Ask Claude to Write the Playwright Test Case"}),"\n",(0,i.jsx)(t.p,{children:"The last step is simple:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Ask Claude:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Using the context, help me write playwright code for e2e testing.\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Claude will analyze the recorded interactions, extracted DOM, and selectors."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["It will generate a ",(0,i.jsx)(t.strong,{children:"fully automated Playwright test"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["In the screenshot reference, you'll see how Claude ",(0,i.jsx)(t.strong,{children:"writes an amazingly structured Playwright test"})," based on your recorded session."]}),"\n",(0,i.jsx)("img",{src:"img/claude-generate-testcase.png",alt:"Generate Test Case in Claude",className:"img-responsive"}),"\n",(0,i.jsxs)(t.p,{children:["This is ",(0,i.jsx)(t.strong,{children:"not just another AI-generated script"}),"\u2014this is a ",(0,i.jsx)(t.strong,{children:"fully usable, highly accurate Playwright test with validated selectors and reliable interactions."})]}),"\n",(0,i.jsx)(t.h3,{id:"bonus",children:"Bonus:"}),"\n",(0,i.jsx)(t.p,{children:"Here is a more descriptive prompt for you to use:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:"    ## DON'T ASSUME ANYTHING. Whatever you write in code, it must be found in the context. Otherwise leave comments.\n\n    ## Goal\n    Help me write playwright code with following functionalities:\n    - [[add semi-high level functionality you want here]]\n    - [[more]]\n    - [[more]]\n    - [[more]]\n\n    ## Steps\n    - First fetch the context from `get-context` tool, until it returns no elements remaining\n    - Based on context and user functionality, write code in POM format, encapsulating high level functionality into reusable functions\n    - Try executing code using `execute-code` tool. You could be on any page, so make sure to navigate to the correct page\n    - Write spec file using those reusable functions, covering multiple scenarios\n\n"})}),"\n",(0,i.jsx)(t.p,{children:"This prompt will also make sure that the selectors are working(A problem we face with LLM based tests a lot)."}),"\n",(0,i.jsxs)(t.p,{children:["Now that you understand how to write a basic test case, head over to ",(0,i.jsx)(t.a,{href:"/features",children:"advanced features"})," for more advanced usage."]}),"\n",(0,i.jsx)(t.p,{children:"Happy coding!"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);